{
	"info": {
		"_postman_id": "3368fb9c-5446-4c34-b7af-e3e4bf3e8af1",
		"name": "learn-backend",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json",
		"_exporter_id": "46088352"
	},
	"item": [
		{
			"name": "book-store-api-development",
			"item": []
		},
		{
			"name": "Create a Book (POST)",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"title\": \"Deep Work\",\r\n  \"author\": \"Cal Newport\",\r\n  \"price\": 450,\r\n  \"isbn\": \"0987654321\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/api/books"
			},
			"response": []
		},
		{
			"name": "POST a new book (Create)",
			"request": {
				"method": "GET",
				"header": [],
				"description": "\n## Add a New Book\n\nThis endpoint allows you to add a new book to the collection. By sending a POST request to `/books`, you can create a new entry with the specified details.\n\n### Request\n\nThe request body must be in JSON format and should include the following parameters:\n\n- **id** (integer): A unique identifier for the book.\n- **title** (string): The title of the book.\n- **author** (string): The author of the book.\n- **price** (integer): The price of the book.\n\n#### Example Request Body\n```json\n{\n  \"id\": 3,\n  \"title\": \"Clean Code\",\n  \"author\": \"Robert C. Martin\",\n  \"price\": 600\n}\n```\n\n### Response\n\nUpon successful creation of the book, the server will respond with a status code of `201 Created`. The response body will contain the following fields:\n\n- **id** (integer): The identifier of the newly created book (may be auto-generated).\n- **title** (string): The title of the book (returned as an empty string if not set).\n- **author** (string): The author of the book (returned as an empty string if not set).\n- **price** (integer): The price of the book (returned as 0 if not set).\n- **_id** (string): A unique identifier for the book in the database.\n- **__v** (integer): The version key for the document.\n\n#### Example Response Body\n```json\n{\n  \"id\": 0,\n  \"title\": \"\",\n  \"author\": \"\",\n  \"price\": 0,\n  \"_id\": \"\",\n  \"__v\": 0\n}\n```\n\n### Notes\n- Ensure that the `id` provided is unique to avoid conflicts.\n- The response will reflect the state of the book as stored in the database after the request is processed.\n"
			},
			"response": []
		},
		{
			"name": "PUT (update) a book (Full / Partial update)",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"price\": 500\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": "http://localhost:3000/books/2"
			},
			"response": []
		},
		{
			"name": "DELETE a book",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}